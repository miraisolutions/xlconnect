# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: windows-binary-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, bugfix/#132-onload-fails-windows ]
  schedule:
    - cron: '12 23 13,28 * *'

jobs:
  build:
    runs-on: windows-2019
    name: >- 
      ${{ matrix.config.os-name }}-${{ matrix.config.os-version }}
      R ${{ matrix.config.r-version}} - java ${{ matrix.config.java}}
    strategy:
      matrix:
        config: 
          - r-version: release
            java: 11
            vignettes: false
            pkgrepo: "https://cloud.r-project.org"
            timezone-name: "W. Europe Standard Time"
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      XLCONNECT_JAVA_REPO_URL: ${{ matrix.config.xlc-repo }}
      RSPM: ${{ matrix.config.pkgrepo }}

    steps:
      - uses: actions/checkout@v2

      - name: RSPM fallback
        if: matrix.config.pkgrepo == ''
        run: echo 'RSPM=https://cloud.r-project.org' >> $GITHUB_ENV

      - name: Setup java (x86)
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.config.java }}
          java-package: jdk
          architecture: x86
        if: matrix.config.os-name != 'macos'
      
      - name: Setup java (x64)
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.config.java }}
          java-package: jdk
          architecture: x64

      - name: Set up R ${{ matrix.config.r-version }}
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r-version }}

      - name: print effective R version
        run: version
        shell: Rscript {0}

      - name: run javareconf # Yes it actually needs JAVA_HOME=$JAVA_HOME, doesn't use actual env vars (!)
        if: runner.os != 'Windows'
        run: |
          java -version
          echo java_home:$JAVA_HOME
          echo library paths: $LD_LIBRARY_PATH
          sudo R CMD javareconf JAVA_HOME=$JAVA_HOME
      
      - name: effective java version # Yes it actually needs JAVA_HOME=$JAVA_HOME, doesn't use actual env vars (!)
        if: runner.os == 'Windows'
        run: java -version

      - name: Query dependencies
        run: |
          install.packages('remotes', repos=getOption('repos')[['CRAN']])
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          remotes::install_cran("covr")
          remotes::install_deps(dependencies = TRUE, repos=getOption('repos')[['RSPM']])
          remotes::install_cran("devtools")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessionInfo()
        shell: Rscript {0}

      - name: Build binary package
        run: |-
            devtools::build(binary=TRUE)
        shell: Rscript {0}

      - name: Upload successfully built package
        if: success() && matrix.config.vignettes
        uses: actions/upload-artifact@main
        with:
          name: java${{ matrix.config.java }}-R${{ matrix.config.r-version }}-binary
          path: | 
            XLConnect_*.zip
