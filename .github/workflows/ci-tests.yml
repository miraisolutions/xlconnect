# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.config.os-name }}-${{ matrix.config.os-version }}
    name: >- 
      ${{ matrix.config.os-name }}-${{ matrix.config.os-version }}
      R ${{ matrix.config.r-version}} - java ${{ matrix.config.java}}
    strategy:
      matrix:
        config: 
          - os-name: ubuntu # windows-2019, macos-10.15]
            os-version: latest
            r-version: oldrel
            java: 15
            vignettes: false
            xlc-repo: https://jcenter.bintray.com
          - os-name: ubuntu # windows-2019, macos-10.15]
            os-version: "18.04"
            r-version: release
            java: 11
            vignettes: true
            timezone-name: Asia/Kathmandu
          - os-name: ubuntu # windows-2019, macos-10.15]
            os-version: "18.04"
            r-version: devel
            java: 8
            vignettes: false
            xlc-repo: https://jcenter.bintray.com
            timezone-name: Pacific/Marquesas
          - os-name: macos
            os-version: "10.15"
            r-version: release
            java: 13
            vignettes: false
          - os-name: ubuntu 
            os-version: "16.04"
            r-version: 3.2.5
            java: 8
            vignettes: false
            xlc-repo: https://jcenter.bintray.com
            timezone-name: Canada/Newfoundland
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      XLCONNECT_JAVA_REPO_URL: ${{matrix.config.xlc-repo}}
      TZ: ${{matrix.config.timezone-name}} 

    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.config.java }}
          java-package: jdk

      - name: Set up R ${{ matrix.config.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r-version }}

      - name: print effective R version
        run: version
        shell: Rscript {0}

      - name: Install tinytex
        if: matrix.config.vignettes
        uses: r-lib/actions/setup-tinytex@v1

      - name: Install extra Tex packages
        if: matrix.config.vignettes
        run: |
          install.packages('tinytex')
          library(tinytex)
          tlmgr_install('datetime') 
          tlmgr_install('inputenc')
          tlmgr_install('hyperref')
          tlmgr_install('url')
          tlmgr_install('fmtcount')
          tinytex:::install_yihui_pkgs()
        shell: Rscript {0}

      - name: run javareconf # Yes it actually needs JAVA_HOME=$JAVA_HOME, doesn't use actual env vars (!)
        run: |
          java -version
          echo java_home:$JAVA_HOME
          echo library paths: $LD_LIBRARY_PATH
          sudo R CMD javareconf JAVA_HOME=$JAVA_HOME

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("${{ matrix.config.os-name }}", "${{ matrix.config.os-version }}"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          if(!require("rcmdcheck")){
            remotes::install_cran("devtools")
          }
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check without doc
        if: ${{!matrix.config.vignettes}}
        env:
          _R_CHECK_CRAN_INCOMING_: false
          FULL_TEST_SUITE: 1
        run: >-
          if(!require("rcmdcheck")){
            devtools::check(args = c("--no-manual", "--no-vignettes", "--no-build-vignettes", "--check-subdirs=no"),
            build_args=c("--no-build-vignettes"), error_on = "error", check_dir = "check")
          } else {
            rcmdcheck::rcmdcheck(args = c("--no-manual", "--no-vignettes", "--no-build-vignettes", "--check-subdirs=no"),
            build_args=c("--no-build-vignettes"), error_on = "error", check_dir = "check")
          }
        shell: Rscript {0}

      - name: Check with doc
        if: matrix.config.vignettes
        env:
          _R_CHECK_CRAN_INCOMING_: false
          FULL_TEST_SUITE: 1
        run: >- 
          rcmdcheck::rcmdcheck(args = c("--as-cran"), 
          build_args=c("--compact-vignettes=gs+qpdf"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show test output
        if: always()
        run: cat check/XLConnect.Rcheck/tests/XLConnect_Unit_Tests.txt || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: | 
            check/XLConnect.Rcheck/
            !check/XLConnect.Rcheck/**/*.jar
            !check/XLConnect.Rcheck/00_pkg_src/

      - name: Upload successfully built package
        if: success() && matrix.config.vignettes
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: | 
            check/XLConnect_*.tar.gz
