# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04] # windows-2019, macos-10.15]
        r-version: [4] #, 3.5, 3.6]
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [15] #  8, 11.0.x,

    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk
      - name: set variables for javareconf
        run: |
          which javah | xargs ls -la
          ls -la /etc/alternatives/javah
          sudo update-alternatives --remove-all javah
          echo JAVA=$(which java) >> $GITHUB_ENV 
          echo JAVAC=$(which javac) >> $GITHUB_ENV
          echo JAVAP=$(which javap) >> $GITHUB_ENV
          echo JAR=$(which jar) >> $GITHUB_ENV
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
      - name: run javareconf
        run: | 
          echo path:$PATH
          echo java_home:$JAVA_HOME
          echo javac_var:$JAVAC
          echo library paths: $LD_LIBRARY_PATH
          sudo R CMD javareconf -n
          sudo R CMD javareconf -n | grep -i "Java version : "${{ matrix.java }} # fail fast
          sudo R CMD javareconf
      - name: Install dependencies
        run: |
          install.packages(c("rJava"))
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
